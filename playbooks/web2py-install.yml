- hosts: all
  vars:
  - web2py_download_url: http://www.web2py.com/examples/static/web2py_src.zip
  - web2py_install_under: /var/www
  - web2py_install_user: web2py
  - apache_common_hostname: kbni.net
  - apache_ssl_crt_file: private/etc/apache2/ssl/intssl.crt
  - apache_ssl_key_file: private/etc/apache2/ssl/intssl.key

  tasks:
  - name: Install required software
    action: apt name="{{ item }}" state=present
    with_items:
    - python
    - python-pip
    - apache2
    - libapache2-mod-wsgi
    - python-psycopg2
    - unzip
    - python-simplejson
    - python-mysqldb
    - python-suds
    - python-pyodbc
    - python-dateutil
    - python-pysqlite2
    - sqlite3
  - pip: name=pyDAL
  - pip: name=elasticsearch
  - pip: name=hypchat
  - pip: name=GitPython

  - stat: path=/etc/apache2/ssl/{{ apache_ssl_key_file | basename }}
    register: ssl_key

  - name: mkdir -p /etc/apache2/ssl
    command: mkdir -p /etc/apache2/ssl
    when: ssl_key.stat.exists == False

  - name: copy apache_ssl_crt_file
    copy: src="{{ apache_ssl_crt_file }}" dest="/etc/apache2/ssl/{{ apache_ssl_crt_file | basename }}" mode=0600
    when: ssl_key.stat.exists == False

  - name: copy apache_ssl_key_file
    copy: src="{{ apache_ssl_key_file }}" dest="/etc/apache2/ssl/{{ apache_ssl_key_file | basename }}" mode=0600
    when: ssl_key.stat.exists == False

  - name: enable necessary apache modules with a2enmod
    command: /usr/sbin/a2enmod ssl proxy proxy_http

  - stat: path="{{ web2py_install_under }}/web2py"
    register: web2py

  - name: clean up sourcecode
    command: rm -f "{{ web2py_install_under }}/web2py_src.zip"
    when: web2py.stat.exists == False

  - name: get web2py source code (save to web2py_download_url/web2py_src.zip)
    command: chdir="{{ web2py_install_under }}" wget "{{ web2py_download_url }}"
    when: web2py.stat.exists == False

  - name: unzip web2py
    command: chdir="{{ web2py_install_under }}" unzip web2py_src.zip
    when: web2py.stat.exists == False

  - name: setup integrator user
    user: name="{{ web2py_install_user }}" groups=www-data append=yes state=present

  - name: change ownership of web2py folder
    command: chown -R "{{ web2py_install_user }}:www-data" "{{ web2py_install_under }}/web2py"
    when: web2py.stat.exists == False

  - name: change ownership of web2py folder
    command: chmod g+ws "{{ web2py_install_under }}/web2py/applications"
    when: web2py.stat.exists == False

  - name: copy wsgihandler
    command: cp "{{ web2py_install_under }}/web2py/handlers/wsgihandler.py" "{{ web2py_install_under }}/web2py/wsgihandler.py"
    when: web2py.stat.exists == False

  - name: web2py admin password file
    copy: src=private/etc/web2py/parameters_443.py dest="{{ web2py_install_under }}/web2py/parameters_443.py" owner=int group=integrations mode=0750
    notify: restart apache2

  - stat: path="/etc/apache/conf.d"
    register: apache2_confd

  - name: apache2 web2py conf.d file
    template: src=private/etc/web2py/web2py-apache.j2 dest=/etc/apache2/conf.d/web2py owner=root group=root mode=0755
    notify: restart apache2
    when: apache2_confd.stat.exists == True

  - name: apache2 web2py conf.d file
    template: src=private/etc/web2py/web2py-apache.j2 dest=/etc/apache2/sites-enabled/web2py.conf owner=root group=root mode=0755
    notify: restart apache2
    when: apache2_confd.stat.exists == False

  handlers:
  - name: restart apache2
    service: name=apache2 state=restarted enabled=yes